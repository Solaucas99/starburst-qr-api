version: '3.2'

services:
  # nginx:
  #   image: nginx:latest
  #   container_name: nginx
  #   restart: always
  #   depends_on:
  #     - "starburst-qr-api"
  #   volumes:
  #     - ./docker/nginx/nginx.conf:/etc/nginx/nginx.conf
  #   ports:
  #     - "80:80"
  #   networks:
  #     - my-network

  db:
    image: mongo
    restart: always
    container_name: dbmongo
    ports:
      - ${DB_PORT}:27017
    networks:
      - my-network
    environment:
      MONGO_INITDB_DATABASE: '${DB_NAME}'
      MONGO_INITDB_ROOT_USERNAME: ${DB_USER}
      MONGO_INITDB_ROOT_PASSWORD: ${DB_PASS}

  mongo-express:
    image: mongo-express
    restart: always
    container_name: mongo-express
    depends_on:
      - db
    ports:
      - ${MONGO_EXPRESS_PORT}:${MONGO_EXPRESS_PORT}
    networks:
      - my-network
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: ${DB_USER}
      ME_CONFIG_MONGODB_ADMINPASSWORD: ${DB_PASS}
      ME_CONFIG_MONGODB_URL: mongodb://${DB_USER}:${DB_PASS}@${DB_HOST}:${DB_PORT}/

  redis:
    image: redis
    restart: always
    container_name: redis
    command: bash -c "redis-server"
    ports:
      - ${REDIS_PORT}:${REDIS_PORT}
    networks:
      - my-network

  starburst-qr:
    build: .
    container_name: starburst-qr
    restart: always
    depends_on:
      - db
      - redis
    ports:
      - ${PORT}:${PORT}
    networks:
      - my-network
    volumes:
      - .:/usr/src/app
    # working_dir: /usr/src/app
    # command: bash -c "npm install && npm run build:sucrase && npm run production"
    command: bash -c "npm install && npm run build && npm start"
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "5"
networks:
    my-network:
        driver: bridge
